#!/usr/bin/python3
import rclpy
from rclpy.node import Node
from geometry_msgs.msg import Twist
import time

print("test_move :: START...")

def infiniteTalk():
    # Initialize ROS node with ROS client
    rclpy.init()
    aNode= Node( "infTalker" )
    talker= ROSTalker(aNode)
    # Start infinite loop
    rclpy.spin(aNode)
    # Clean everything and switch the light off
    aNode.destroy_node()
    rclpy.shutdown()

class ROSTalker:
    def __init__(self, rosNode):
        self._counter = 0
        self._time_elapsed = 0
        self._publisher= rosNode.create_publisher( Twist, '/multi/cmd_nav', 10 )
        self._timer = rosNode.create_timer(3, self.timer_callback)
        
    def timer_callback(self):
        velocity = Twist()
        self._time_elapsed = 0

        # Cycle movement
        if self._counter % 2 == 0:
            while self._time_elapsed < 2:
                # Move forward
                velocity.linear.x = 0.2
                velocity.angular.z = 0.0
                self._publisher.publish(velocity)

                time.sleep(0.1)
                self._time_elapsed += 0.1
                #print("tout droit")
        else:
            while self._time_elapsed < 2:
                # Turn 90 degrees left
                velocity.linear.x = 0.0
                velocity.angular.z = 0.79
                self._publisher.publish(velocity)
                
                time.sleep(0.1)
                self._time_elapsed += 0.1
                #print("on tourne")

        self._counter += 1

# Execute the function.
if __name__ == "__main__":
    infiniteTalk()